Grammar

    0 $accept: programN $end

    1 programN: PROGRAM ID ':' funcdefstar MAIN ':' body

    2 funcdefstar: funcdef funcdefstar
    3            | ε

    4 semicolonvarseqstar: ';' varseq semicolonvarseqstar
    5                    | ε

    6 funcdef: ID ':' TAKES varseq semicolonvarseqstar RETURNS type body

    7 varsvarseqsemicolonvarseqstaroptional: VARS varseq semicolonvarseqstar
    8                                      | ε

    9 body: varsvarseqsemicolonvarseqstaroptional statements

   10 commaidstar: ',' ID commaidstar
   11            | ε

   12 varseq: ID commaidstar AS type

   13 boleanorinteger: BOOLEAN
   14                | INTEGER

   15 arrayoptional: ARRAY
   16              | ε

   17 type: boleanorinteger arrayoptional

   18 semicolonstatementstar: ';' statement semicolonstatementstar
   19                       | ε

   20 statements: CHILLAX
   21           | statement semicolonstatementstar END

   22 statement: assign
   23          | backN
   24          | doN
   25          | ifN
   26          | inputN
   27          | outputN
   28          | whileN

   29 bracketsimplebracketoptionall: '[' simple ']'
   30                              | ε

   31 exprorarraysimple: expr
   32                  | ARRAY simple

   33 assign: LET ID bracketsimplebracketoptionall '=' exprorarraysimple

   34 exproptional: expr
   35             | ε

   36 backN: BACK exproptional

   37 commaexprstar: ',' expr commaexprstar
   38              | ε

   39 doN: DO ID '(' expr commaexprstar ')'

   40 elifexprcolonstatementsstar: ELIF expr ':' statements elifexprcolonstatementsstar
   41                            | ε

   42 elsecolonstatementsoptional: ELSE ':' statements
   43                            | ε

   44 ifN: IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional

   45 inputN: INPUT ID bracketsimplebracketoptionall

   46 stringexpr: STRING
   47           | expr

   48 andstringexprstar: '&' stringexpr andstringexprstar
   49                  | ε

   50 outputN: OUTPUT stringexpr andstringexprstar

   51 whileN: WHILE expr ':' statements

   52 reloporsimpleoptional: relop simple
   53                      | ε

   54 expr: simple reloporsimpleoptional

   55 relop: EQ
   56      | GEQ
   57      | GT
   58      | LEQ
   59      | LT
   60      | NEQ

   61 minusoptional: '-'
   62              | ε

   63 addoptermstar: addop term addoptermstar
   64              | ε

   65 simple: minusoptional term addoptermstar

   66 addop: '-'
   67      | OR
   68      | '+'

   69 mulopfactorstar: mulop factor mulopfactorstar
   70                | ε

   71 term: factor mulopfactorstar

   72 mulop: AND
   73      | '/'
   74      | '*'
   75      | MOD

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']'
   77                                        | '(' expr commaexprstar ')'
   78                                        | ε

   79 factor: ID bracksimpbrackexprcommaexprstaroptional
   80       | NUM
   81       | '(' expr ')'
   82       | NOT factor
   83       | TRUE
   84       | FALSE


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 48
    '(' (40) 39 77 81
    ')' (41) 39 77 81
    '*' (42) 74
    '+' (43) 68
    ',' (44) 10 37
    '-' (45) 61 66
    '/' (47) 73
    ':' (58) 1 6 40 42 44 51
    ';' (59) 4 18
    '=' (61) 33
    '[' (91) 29 76
    ']' (93) 29 76
    error (256)
    PROGRAM (258) 1
    ID (259) 1 6 10 12 33 39 45 79
    MAIN (260) 1
    TAKES (261) 6
    RETURNS (262) 6
    BOOLEAN (263) 13
    INTEGER (264) 14
    STRING (265) 46
    ARRAY (266) 15 32
    CHILLAX (267) 20
    VARS (268) 7
    AS (269) 12
    END (270) 21
    LET (271) 33
    BACK (272) 36
    DO (273) 39
    IF (274) 44
    ELIF (275) 40
    ELSE (276) 42
    INPUT (277) 45
    OUTPUT (278) 50
    WHILE (279) 51
    EQ (280) 55
    GEQ (281) 56
    GT (282) 57
    LEQ (283) 58
    LT (284) 59
    NEQ (285) 60
    OR (286) 67
    AND (287) 72
    TRUE (288) 83
    FALSE (289) 84
    MOD (290) 75
    NUM (291) 80
    NOT (292) 82


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    programN (52)
        on left: 1
        on right: 0
    funcdefstar (53)
        on left: 2 3
        on right: 1 2
    semicolonvarseqstar (54)
        on left: 4 5
        on right: 4 6 7
    funcdef (55)
        on left: 6
        on right: 2
    varsvarseqsemicolonvarseqstaroptional (56)
        on left: 7 8
        on right: 9
    body (57)
        on left: 9
        on right: 1 6
    commaidstar (58)
        on left: 10 11
        on right: 10 12
    varseq (59)
        on left: 12
        on right: 4 6 7
    boleanorinteger (60)
        on left: 13 14
        on right: 17
    arrayoptional (61)
        on left: 15 16
        on right: 17
    type (62)
        on left: 17
        on right: 6 12
    semicolonstatementstar (63)
        on left: 18 19
        on right: 18 21
    statements (64)
        on left: 20 21
        on right: 9 40 42 44 51
    statement (65)
        on left: 22 23 24 25 26 27 28
        on right: 18 21
    bracketsimplebracketoptionall (66)
        on left: 29 30
        on right: 33 45
    exprorarraysimple (67)
        on left: 31 32
        on right: 33
    assign (68)
        on left: 33
        on right: 22
    exproptional (69)
        on left: 34 35
        on right: 36
    backN (70)
        on left: 36
        on right: 23
    commaexprstar (71)
        on left: 37 38
        on right: 37 39 77
    doN (72)
        on left: 39
        on right: 24
    elifexprcolonstatementsstar (73)
        on left: 40 41
        on right: 40 44
    elsecolonstatementsoptional (74)
        on left: 42 43
        on right: 44
    ifN (75)
        on left: 44
        on right: 25
    inputN (76)
        on left: 45
        on right: 26
    stringexpr (77)
        on left: 46 47
        on right: 48 50
    andstringexprstar (78)
        on left: 48 49
        on right: 48 50
    outputN (79)
        on left: 50
        on right: 27
    whileN (80)
        on left: 51
        on right: 28
    reloporsimpleoptional (81)
        on left: 52 53
        on right: 54
    expr (82)
        on left: 54
        on right: 31 34 37 39 40 44 47 51 77 81
    relop (83)
        on left: 55 56 57 58 59 60
        on right: 52
    minusoptional (84)
        on left: 61 62
        on right: 65
    addoptermstar (85)
        on left: 63 64
        on right: 63 65
    simple (86)
        on left: 65
        on right: 29 32 52 54 76
    addop (87)
        on left: 66 67 68
        on right: 63
    mulopfactorstar (88)
        on left: 69 70
        on right: 69 71
    term (89)
        on left: 71
        on right: 63 65
    mulop (90)
        on left: 72 73 74 75
        on right: 69
    bracksimpbrackexprcommaexprstaroptional (91)
        on left: 76 77 78
        on right: 79
    factor (92)
        on left: 79 80 81 82 83 84
        on right: 69 71 82


State 0

    0 $accept: • programN $end
    1 programN: • PROGRAM ID ':' funcdefstar MAIN ':' body

    PROGRAM  shift, and go to state 1

    programN  go to state 2


State 1

    1 programN: PROGRAM • ID ':' funcdefstar MAIN ':' body

    ID  shift, and go to state 3


State 2

    0 $accept: programN • $end

    $end  shift, and go to state 4


State 3

    1 programN: PROGRAM ID • ':' funcdefstar MAIN ':' body

    ':'  shift, and go to state 5


State 4

    0 $accept: programN $end •

    $default  accept


State 5

    1 programN: PROGRAM ID ':' • funcdefstar MAIN ':' body
    2 funcdefstar: • funcdef funcdefstar
    3            | ε •
    6 funcdef: • ID ':' TAKES varseq semicolonvarseqstar RETURNS type body

    ID  shift, and go to state 6

    MAIN  reduce using rule 3 (funcdefstar)

    funcdefstar  go to state 7
    funcdef      go to state 8


State 6

    6 funcdef: ID • ':' TAKES varseq semicolonvarseqstar RETURNS type body

    ':'  shift, and go to state 9


State 7

    1 programN: PROGRAM ID ':' funcdefstar • MAIN ':' body

    MAIN  shift, and go to state 10


State 8

    2 funcdefstar: • funcdef funcdefstar
    2            | funcdef • funcdefstar
    3            | ε •
    6 funcdef: • ID ':' TAKES varseq semicolonvarseqstar RETURNS type body

    ID  shift, and go to state 6

    MAIN  reduce using rule 3 (funcdefstar)

    funcdefstar  go to state 11
    funcdef      go to state 8


State 9

    6 funcdef: ID ':' • TAKES varseq semicolonvarseqstar RETURNS type body

    TAKES  shift, and go to state 12


State 10

    1 programN: PROGRAM ID ':' funcdefstar MAIN • ':' body

    ':'  shift, and go to state 13


State 11

    2 funcdefstar: funcdef funcdefstar •

    MAIN  reduce using rule 2 (funcdefstar)


State 12

    6 funcdef: ID ':' TAKES • varseq semicolonvarseqstar RETURNS type body
   12 varseq: • ID commaidstar AS type

    ID  shift, and go to state 14

    varseq  go to state 15


State 13

    1 programN: PROGRAM ID ':' funcdefstar MAIN ':' • body
    7 varsvarseqsemicolonvarseqstaroptional: • VARS varseq semicolonvarseqstar
    8                                      | ε •
    9 body: • varsvarseqsemicolonvarseqstaroptional statements

    VARS  shift, and go to state 16

    CHILLAX  reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    LET      reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    BACK     reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    DO       reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    IF       reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    INPUT    reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    OUTPUT   reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    WHILE    reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)

    varsvarseqsemicolonvarseqstaroptional  go to state 17
    body                                   go to state 18


State 14

   10 commaidstar: • ',' ID commaidstar
   11            | ε •
   12 varseq: ID • commaidstar AS type

    ','  shift, and go to state 19

    AS  reduce using rule 11 (commaidstar)

    commaidstar  go to state 20


State 15

    4 semicolonvarseqstar: • ';' varseq semicolonvarseqstar
    5                    | ε •
    6 funcdef: ID ':' TAKES varseq • semicolonvarseqstar RETURNS type body

    ';'  shift, and go to state 21

    RETURNS  reduce using rule 5 (semicolonvarseqstar)

    semicolonvarseqstar  go to state 22


State 16

    7 varsvarseqsemicolonvarseqstaroptional: VARS • varseq semicolonvarseqstar
   12 varseq: • ID commaidstar AS type

    ID  shift, and go to state 152

    varseq  go to state 23


State 17

    9 body: varsvarseqsemicolonvarseqstaroptional • statements
   20 statements: • CHILLAX
   21           | • statement semicolonstatementstar END
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements

    CHILLAX  shift, and go to state 24
    LET      shift, and go to state 25
    BACK     shift, and go to state 26
    DO       shift, and go to state 27
    IF       shift, and go to state 28
    INPUT    shift, and go to state 29
    OUTPUT   shift, and go to state 30
    WHILE    shift, and go to state 31

    statements  go to state 32
    statement   go to state 33
    assign      go to state 34
    backN       go to state 35
    doN         go to state 36
    ifN         go to state 37
    inputN      go to state 38
    outputN     go to state 39
    whileN      go to state 40


State 18

    1 programN: PROGRAM ID ':' funcdefstar MAIN ':' body •

    $end  reduce using rule 1 (programN)


State 19

   10 commaidstar: ',' • ID commaidstar

    ID  shift, and go to state 41


State 20

   12 varseq: ID commaidstar • AS type

    AS  shift, and go to state 42


State 21

    4 semicolonvarseqstar: ';' • varseq semicolonvarseqstar
   12 varseq: • ID commaidstar AS type

    ID  shift, and go to state 14

    varseq  go to state 43


State 22

    6 funcdef: ID ':' TAKES varseq semicolonvarseqstar • RETURNS type body

    RETURNS  shift, and go to state 44


State 23

    4 semicolonvarseqstar: • ';' varseq semicolonvarseqstar
    5                    | ε •
    7 varsvarseqsemicolonvarseqstaroptional: VARS varseq • semicolonvarseqstar

    ';'  shift, and go to state 153

    CHILLAX  reduce using rule 5 (semicolonvarseqstar)
    LET      reduce using rule 5 (semicolonvarseqstar)
    BACK     reduce using rule 5 (semicolonvarseqstar)
    DO       reduce using rule 5 (semicolonvarseqstar)
    IF       reduce using rule 5 (semicolonvarseqstar)
    INPUT    reduce using rule 5 (semicolonvarseqstar)
    OUTPUT   reduce using rule 5 (semicolonvarseqstar)
    WHILE    reduce using rule 5 (semicolonvarseqstar)

    semicolonvarseqstar  go to state 45


State 24

   20 statements: CHILLAX •

    $end  reduce using rule 20 (statements)


State 25

   33 assign: LET • ID bracketsimplebracketoptionall '=' exprorarraysimple

    ID  shift, and go to state 46


State 26

   34 exproptional: • expr
   35             | ε •
   36 backN: BACK • exproptional
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    END    reduce using rule 35 (exproptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    ';'    reduce using rule 35 (exproptional)
    '('    reduce using rule 62 (minusoptional)

    exproptional   go to state 48
    expr           go to state 49
    minusoptional  go to state 50
    simple         go to state 51


State 27

   39 doN: DO • ID '(' expr commaexprstar ')'

    ID  shift, and go to state 52


State 28

   44 ifN: IF • expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 53
    minusoptional  go to state 154
    simple         go to state 155


State 29

   45 inputN: INPUT • ID bracketsimplebracketoptionall

    ID  shift, and go to state 54


State 30

   46 stringexpr: • STRING
   47           | • expr
   50 outputN: OUTPUT • stringexpr andstringexprstar
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    STRING  shift, and go to state 55
    '-'     shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    stringexpr     go to state 56
    expr           go to state 57
    minusoptional  go to state 156
    simple         go to state 157


State 31

   51 whileN: WHILE • expr ':' statements
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 58
    minusoptional  go to state 154
    simple         go to state 155


State 32

    9 body: varsvarseqsemicolonvarseqstaroptional statements •

    $end  reduce using rule 9 (body)


State 33

   18 semicolonstatementstar: • ';' statement semicolonstatementstar
   19                       | ε •
   21 statements: statement • semicolonstatementstar END

    ';'  shift, and go to state 59

    END  reduce using rule 19 (semicolonstatementstar)

    semicolonstatementstar  go to state 60


State 34

   22 statement: assign •

    END  reduce using rule 22 (statement)
    ';'  reduce using rule 22 (statement)


State 35

   23 statement: backN •

    END  reduce using rule 23 (statement)
    ';'  reduce using rule 23 (statement)


State 36

   24 statement: doN •

    END  reduce using rule 24 (statement)
    ';'  reduce using rule 24 (statement)


State 37

   25 statement: ifN •

    END  reduce using rule 25 (statement)
    ';'  reduce using rule 25 (statement)


State 38

   26 statement: inputN •

    END  reduce using rule 26 (statement)
    ';'  reduce using rule 26 (statement)


State 39

   27 statement: outputN •

    END  reduce using rule 27 (statement)
    ';'  reduce using rule 27 (statement)


State 40

   28 statement: whileN •

    END  reduce using rule 28 (statement)
    ';'  reduce using rule 28 (statement)


State 41

   10 commaidstar: • ',' ID commaidstar
   10            | ',' ID • commaidstar
   11            | ε •

    ','  shift, and go to state 19

    AS  reduce using rule 11 (commaidstar)

    commaidstar  go to state 61


State 42

   12 varseq: ID commaidstar AS • type
   13 boleanorinteger: • BOOLEAN
   14                | • INTEGER
   17 type: • boleanorinteger arrayoptional

    BOOLEAN  shift, and go to state 62
    INTEGER  shift, and go to state 63

    boleanorinteger  go to state 64
    type             go to state 65


State 43

    4 semicolonvarseqstar: • ';' varseq semicolonvarseqstar
    4                    | ';' varseq • semicolonvarseqstar
    5                    | ε •

    ';'  shift, and go to state 21

    RETURNS  reduce using rule 5 (semicolonvarseqstar)

    semicolonvarseqstar  go to state 66


State 44

    6 funcdef: ID ':' TAKES varseq semicolonvarseqstar RETURNS • type body
   13 boleanorinteger: • BOOLEAN
   14                | • INTEGER
   17 type: • boleanorinteger arrayoptional

    BOOLEAN  shift, and go to state 158
    INTEGER  shift, and go to state 159

    boleanorinteger  go to state 160
    type             go to state 67


State 45

    7 varsvarseqsemicolonvarseqstaroptional: VARS varseq semicolonvarseqstar •

    CHILLAX  reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    LET      reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    BACK     reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    DO       reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    IF       reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    INPUT    reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    OUTPUT   reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)
    WHILE    reduce using rule 7 (varsvarseqsemicolonvarseqstaroptional)


State 46

   29 bracketsimplebracketoptionall: • '[' simple ']'
   30                              | ε •
   33 assign: LET ID • bracketsimplebracketoptionall '=' exprorarraysimple

    '['  shift, and go to state 68

    '='  reduce using rule 30 (bracketsimplebracketoptionall)

    bracketsimplebracketoptionall  go to state 69


State 47

   61 minusoptional: '-' •

    ID     reduce using rule 61 (minusoptional)
    TRUE   reduce using rule 61 (minusoptional)
    FALSE  reduce using rule 61 (minusoptional)
    NUM    reduce using rule 61 (minusoptional)
    NOT    reduce using rule 61 (minusoptional)
    '('    reduce using rule 61 (minusoptional)


State 48

   36 backN: BACK exproptional •

    END  reduce using rule 36 (backN)
    ';'  reduce using rule 36 (backN)


State 49

   34 exproptional: expr •

    END  reduce using rule 34 (exproptional)
    ';'  reduce using rule 34 (exproptional)


State 50

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    NUM    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    term    go to state 76
    factor  go to state 77


State 51

   52 reloporsimpleoptional: • relop simple
   53                      | ε •
   54 expr: simple • reloporsimpleoptional
   55 relop: • EQ
   56      | • GEQ
   57      | • GT
   58      | • LEQ
   59      | • LT
   60      | • NEQ

    EQ   shift, and go to state 78
    GEQ  shift, and go to state 79
    GT   shift, and go to state 80
    LEQ  shift, and go to state 81
    LT   shift, and go to state 82
    NEQ  shift, and go to state 83

    END  reduce using rule 53 (reloporsimpleoptional)
    ';'  reduce using rule 53 (reloporsimpleoptional)

    reloporsimpleoptional  go to state 84
    relop                  go to state 85


State 52

   39 doN: DO ID • '(' expr commaexprstar ')'

    '('  shift, and go to state 86


State 53

   44 ifN: IF expr • ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional

    ':'  shift, and go to state 87


State 54

   29 bracketsimplebracketoptionall: • '[' simple ']'
   30                              | ε •
   45 inputN: INPUT ID • bracketsimplebracketoptionall

    '['  shift, and go to state 161

    END  reduce using rule 30 (bracketsimplebracketoptionall)
    ';'  reduce using rule 30 (bracketsimplebracketoptionall)

    bracketsimplebracketoptionall  go to state 88


State 55

   46 stringexpr: STRING •

    END  reduce using rule 46 (stringexpr)
    ';'  reduce using rule 46 (stringexpr)
    '&'  reduce using rule 46 (stringexpr)


State 56

   48 andstringexprstar: • '&' stringexpr andstringexprstar
   49                  | ε •
   50 outputN: OUTPUT stringexpr • andstringexprstar

    '&'  shift, and go to state 89

    END  reduce using rule 49 (andstringexprstar)
    ';'  reduce using rule 49 (andstringexprstar)

    andstringexprstar  go to state 90


State 57

   47 stringexpr: expr •

    END  reduce using rule 47 (stringexpr)
    ';'  reduce using rule 47 (stringexpr)
    '&'  reduce using rule 47 (stringexpr)


State 58

   51 whileN: WHILE expr • ':' statements

    ':'  shift, and go to state 91


State 59

   18 semicolonstatementstar: ';' • statement semicolonstatementstar
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements

    LET     shift, and go to state 25
    BACK    shift, and go to state 26
    DO      shift, and go to state 27
    IF      shift, and go to state 28
    INPUT   shift, and go to state 29
    OUTPUT  shift, and go to state 30
    WHILE   shift, and go to state 31

    statement  go to state 92
    assign     go to state 34
    backN      go to state 35
    doN        go to state 36
    ifN        go to state 37
    inputN     go to state 38
    outputN    go to state 39
    whileN     go to state 40


State 60

   21 statements: statement semicolonstatementstar • END

    END  shift, and go to state 93


State 61

   10 commaidstar: ',' ID commaidstar •

    AS  reduce using rule 10 (commaidstar)


State 62

   13 boleanorinteger: BOOLEAN •

    RETURNS  reduce using rule 13 (boleanorinteger)
    ARRAY    reduce using rule 13 (boleanorinteger)
    ';'      reduce using rule 13 (boleanorinteger)


State 63

   14 boleanorinteger: INTEGER •

    RETURNS  reduce using rule 14 (boleanorinteger)
    ARRAY    reduce using rule 14 (boleanorinteger)
    ';'      reduce using rule 14 (boleanorinteger)


State 64

   15 arrayoptional: • ARRAY
   16              | ε •
   17 type: boleanorinteger • arrayoptional

    ARRAY  shift, and go to state 94

    RETURNS  reduce using rule 16 (arrayoptional)
    ';'      reduce using rule 16 (arrayoptional)

    arrayoptional  go to state 95


State 65

   12 varseq: ID commaidstar AS type •

    RETURNS  reduce using rule 12 (varseq)
    ';'      reduce using rule 12 (varseq)


State 66

    4 semicolonvarseqstar: ';' varseq semicolonvarseqstar •

    RETURNS  reduce using rule 4 (semicolonvarseqstar)


State 67

    6 funcdef: ID ':' TAKES varseq semicolonvarseqstar RETURNS type • body
    7 varsvarseqsemicolonvarseqstaroptional: • VARS varseq semicolonvarseqstar
    8                                      | ε •
    9 body: • varsvarseqsemicolonvarseqstaroptional statements

    VARS  shift, and go to state 16

    CHILLAX  reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    LET      reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    BACK     reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    DO       reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    IF       reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    INPUT    reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    OUTPUT   reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)
    WHILE    reduce using rule 8 (varsvarseqsemicolonvarseqstaroptional)

    varsvarseqsemicolonvarseqstaroptional  go to state 162
    body                                   go to state 96


State 68

   29 bracketsimplebracketoptionall: '[' • simple ']'
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 97


State 69

   33 assign: LET ID bracketsimplebracketoptionall • '=' exprorarraysimple

    '='  shift, and go to state 98


State 70

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 99
    '('  shift, and go to state 100

    END  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    EQ   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 101


State 71

   83 factor: TRUE •

    END  reduce using rule 83 (factor)
    EQ   reduce using rule 83 (factor)
    GEQ  reduce using rule 83 (factor)
    GT   reduce using rule 83 (factor)
    LEQ  reduce using rule 83 (factor)
    LT   reduce using rule 83 (factor)
    NEQ  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ';'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 72

   84 factor: FALSE •

    END  reduce using rule 84 (factor)
    EQ   reduce using rule 84 (factor)
    GEQ  reduce using rule 84 (factor)
    GT   reduce using rule 84 (factor)
    LEQ  reduce using rule 84 (factor)
    LT   reduce using rule 84 (factor)
    NEQ  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ';'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 73

   80 factor: NUM •

    END  reduce using rule 80 (factor)
    EQ   reduce using rule 80 (factor)
    GEQ  reduce using rule 80 (factor)
    GT   reduce using rule 80 (factor)
    LEQ  reduce using rule 80 (factor)
    LT   reduce using rule 80 (factor)
    NEQ  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ';'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 74

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    NUM    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    factor  go to state 102


State 75

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 103
    minusoptional  go to state 164
    simple         go to state 165


State 76

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 107
    addop          go to state 108


State 77

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 113
    mulop            go to state 114


State 78

   55 relop: EQ •

    ID     reduce using rule 55 (relop)
    TRUE   reduce using rule 55 (relop)
    FALSE  reduce using rule 55 (relop)
    NUM    reduce using rule 55 (relop)
    NOT    reduce using rule 55 (relop)
    '('    reduce using rule 55 (relop)
    '-'    reduce using rule 55 (relop)


State 79

   56 relop: GEQ •

    ID     reduce using rule 56 (relop)
    TRUE   reduce using rule 56 (relop)
    FALSE  reduce using rule 56 (relop)
    NUM    reduce using rule 56 (relop)
    NOT    reduce using rule 56 (relop)
    '('    reduce using rule 56 (relop)
    '-'    reduce using rule 56 (relop)


State 80

   57 relop: GT •

    ID     reduce using rule 57 (relop)
    TRUE   reduce using rule 57 (relop)
    FALSE  reduce using rule 57 (relop)
    NUM    reduce using rule 57 (relop)
    NOT    reduce using rule 57 (relop)
    '('    reduce using rule 57 (relop)
    '-'    reduce using rule 57 (relop)


State 81

   58 relop: LEQ •

    ID     reduce using rule 58 (relop)
    TRUE   reduce using rule 58 (relop)
    FALSE  reduce using rule 58 (relop)
    NUM    reduce using rule 58 (relop)
    NOT    reduce using rule 58 (relop)
    '('    reduce using rule 58 (relop)
    '-'    reduce using rule 58 (relop)


State 82

   59 relop: LT •

    ID     reduce using rule 59 (relop)
    TRUE   reduce using rule 59 (relop)
    FALSE  reduce using rule 59 (relop)
    NUM    reduce using rule 59 (relop)
    NOT    reduce using rule 59 (relop)
    '('    reduce using rule 59 (relop)
    '-'    reduce using rule 59 (relop)


State 83

   60 relop: NEQ •

    ID     reduce using rule 60 (relop)
    TRUE   reduce using rule 60 (relop)
    FALSE  reduce using rule 60 (relop)
    NUM    reduce using rule 60 (relop)
    NOT    reduce using rule 60 (relop)
    '('    reduce using rule 60 (relop)
    '-'    reduce using rule 60 (relop)


State 84

   54 expr: simple reloporsimpleoptional •

    END  reduce using rule 54 (expr)
    ';'  reduce using rule 54 (expr)


State 85

   52 reloporsimpleoptional: relop • simple
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 166
    simple         go to state 115


State 86

   39 doN: DO ID '(' • expr commaexprstar ')'
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 116
    minusoptional  go to state 167
    simple         go to state 168


State 87

   20 statements: • CHILLAX
   21           | • statement semicolonstatementstar END
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   44    | IF expr ':' • statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements

    CHILLAX  shift, and go to state 169
    LET      shift, and go to state 25
    BACK     shift, and go to state 26
    DO       shift, and go to state 27
    IF       shift, and go to state 28
    INPUT    shift, and go to state 29
    OUTPUT   shift, and go to state 30
    WHILE    shift, and go to state 31

    statements  go to state 117
    statement   go to state 170
    assign      go to state 34
    backN       go to state 35
    doN         go to state 36
    ifN         go to state 37
    inputN      go to state 38
    outputN     go to state 39
    whileN      go to state 40


State 88

   45 inputN: INPUT ID bracketsimplebracketoptionall •

    END  reduce using rule 45 (inputN)
    ';'  reduce using rule 45 (inputN)


State 89

   46 stringexpr: • STRING
   47           | • expr
   48 andstringexprstar: '&' • stringexpr andstringexprstar
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    STRING  shift, and go to state 55
    '-'     shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    stringexpr     go to state 118
    expr           go to state 57
    minusoptional  go to state 156
    simple         go to state 157


State 90

   50 outputN: OUTPUT stringexpr andstringexprstar •

    END  reduce using rule 50 (outputN)
    ';'  reduce using rule 50 (outputN)


State 91

   20 statements: • CHILLAX
   21           | • statement semicolonstatementstar END
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements
   51       | WHILE expr ':' • statements

    CHILLAX  shift, and go to state 171
    LET      shift, and go to state 25
    BACK     shift, and go to state 26
    DO       shift, and go to state 27
    IF       shift, and go to state 28
    INPUT    shift, and go to state 29
    OUTPUT   shift, and go to state 30
    WHILE    shift, and go to state 31

    statements  go to state 119
    statement   go to state 172
    assign      go to state 34
    backN       go to state 35
    doN         go to state 36
    ifN         go to state 37
    inputN      go to state 38
    outputN     go to state 39
    whileN      go to state 40


State 92

   18 semicolonstatementstar: • ';' statement semicolonstatementstar
   18                       | ';' statement • semicolonstatementstar
   19                       | ε •

    ';'  shift, and go to state 59

    END  reduce using rule 19 (semicolonstatementstar)

    semicolonstatementstar  go to state 120


State 93

   21 statements: statement semicolonstatementstar END •

    $end  reduce using rule 21 (statements)


State 94

   15 arrayoptional: ARRAY •

    RETURNS  reduce using rule 15 (arrayoptional)
    ';'      reduce using rule 15 (arrayoptional)


State 95

   17 type: boleanorinteger arrayoptional •

    RETURNS  reduce using rule 17 (type)
    ';'      reduce using rule 17 (type)


State 96

    6 funcdef: ID ':' TAKES varseq semicolonvarseqstar RETURNS type body •

    ID    reduce using rule 6 (funcdef)
    MAIN  reduce using rule 6 (funcdef)


State 97

   29 bracketsimplebracketoptionall: '[' simple • ']'

    ']'  shift, and go to state 121


State 98

   31 exprorarraysimple: • expr
   32                  | • ARRAY simple
   33 assign: LET ID bracketsimplebracketoptionall '=' • exprorarraysimple
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    ARRAY  shift, and go to state 122
    '-'    shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    exprorarraysimple  go to state 123
    expr               go to state 124
    minusoptional      go to state 50
    simple             go to state 51


State 99

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 125


State 100

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 126
    minusoptional  go to state 167
    simple         go to state 168


State 101

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    END  reduce using rule 79 (factor)
    EQ   reduce using rule 79 (factor)
    GEQ  reduce using rule 79 (factor)
    GT   reduce using rule 79 (factor)
    LEQ  reduce using rule 79 (factor)
    LT   reduce using rule 79 (factor)
    NEQ  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ';'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 102

   82 factor: NOT factor •

    END  reduce using rule 82 (factor)
    EQ   reduce using rule 82 (factor)
    GEQ  reduce using rule 82 (factor)
    GT   reduce using rule 82 (factor)
    LEQ  reduce using rule 82 (factor)
    LT   reduce using rule 82 (factor)
    NEQ  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ';'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 103

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 127


State 104

   67 addop: OR •

    ID     reduce using rule 67 (addop)
    TRUE   reduce using rule 67 (addop)
    FALSE  reduce using rule 67 (addop)
    NUM    reduce using rule 67 (addop)
    NOT    reduce using rule 67 (addop)
    '('    reduce using rule 67 (addop)


State 105

   66 addop: '-' •

    ID     reduce using rule 66 (addop)
    TRUE   reduce using rule 66 (addop)
    FALSE  reduce using rule 66 (addop)
    NUM    reduce using rule 66 (addop)
    NOT    reduce using rule 66 (addop)
    '('    reduce using rule 66 (addop)


State 106

   68 addop: '+' •

    ID     reduce using rule 68 (addop)
    TRUE   reduce using rule 68 (addop)
    FALSE  reduce using rule 68 (addop)
    NUM    reduce using rule 68 (addop)
    NOT    reduce using rule 68 (addop)
    '('    reduce using rule 68 (addop)


State 107

   65 simple: minusoptional term addoptermstar •

    END  reduce using rule 65 (simple)
    EQ   reduce using rule 65 (simple)
    GEQ  reduce using rule 65 (simple)
    GT   reduce using rule 65 (simple)
    LEQ  reduce using rule 65 (simple)
    LT   reduce using rule 65 (simple)
    NEQ  reduce using rule 65 (simple)
    ';'  reduce using rule 65 (simple)


State 108

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    NUM    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    term    go to state 128
    factor  go to state 77


State 109

   72 mulop: AND •

    ID     reduce using rule 72 (mulop)
    TRUE   reduce using rule 72 (mulop)
    FALSE  reduce using rule 72 (mulop)
    NUM    reduce using rule 72 (mulop)
    NOT    reduce using rule 72 (mulop)
    '('    reduce using rule 72 (mulop)


State 110

   75 mulop: MOD •

    ID     reduce using rule 75 (mulop)
    TRUE   reduce using rule 75 (mulop)
    FALSE  reduce using rule 75 (mulop)
    NUM    reduce using rule 75 (mulop)
    NOT    reduce using rule 75 (mulop)
    '('    reduce using rule 75 (mulop)


State 111

   73 mulop: '/' •

    ID     reduce using rule 73 (mulop)
    TRUE   reduce using rule 73 (mulop)
    FALSE  reduce using rule 73 (mulop)
    NUM    reduce using rule 73 (mulop)
    NOT    reduce using rule 73 (mulop)
    '('    reduce using rule 73 (mulop)


State 112

   74 mulop: '*' •

    ID     reduce using rule 74 (mulop)
    TRUE   reduce using rule 74 (mulop)
    FALSE  reduce using rule 74 (mulop)
    NUM    reduce using rule 74 (mulop)
    NOT    reduce using rule 74 (mulop)
    '('    reduce using rule 74 (mulop)


State 113

   71 term: factor mulopfactorstar •

    END  reduce using rule 71 (term)
    EQ   reduce using rule 71 (term)
    GEQ  reduce using rule 71 (term)
    GT   reduce using rule 71 (term)
    LEQ  reduce using rule 71 (term)
    LT   reduce using rule 71 (term)
    NEQ  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ';'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 114

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    NUM    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    factor  go to state 129


State 115

   52 reloporsimpleoptional: relop simple •

    END  reduce using rule 52 (reloporsimpleoptional)
    ';'  reduce using rule 52 (reloporsimpleoptional)


State 116

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   39 doN: DO ID '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 131


State 117

   40 elifexprcolonstatementsstar: • ELIF expr ':' statements elifexprcolonstatementsstar
   41                            | ε •
   44 ifN: IF expr ':' statements • elifexprcolonstatementsstar elsecolonstatementsoptional

    ELIF  shift, and go to state 132

    END   reduce using rule 41 (elifexprcolonstatementsstar)
    ELSE  reduce using rule 41 (elifexprcolonstatementsstar)
    ';'   reduce using rule 41 (elifexprcolonstatementsstar)

    elifexprcolonstatementsstar  go to state 133


State 118

   48 andstringexprstar: • '&' stringexpr andstringexprstar
   48                  | '&' stringexpr • andstringexprstar
   49                  | ε •

    '&'  shift, and go to state 89

    END  reduce using rule 49 (andstringexprstar)
    ';'  reduce using rule 49 (andstringexprstar)

    andstringexprstar  go to state 134


State 119

   51 whileN: WHILE expr ':' statements •

    END  reduce using rule 51 (whileN)
    ';'  reduce using rule 51 (whileN)


State 120

   18 semicolonstatementstar: ';' statement semicolonstatementstar •

    END  reduce using rule 18 (semicolonstatementstar)


State 121

   29 bracketsimplebracketoptionall: '[' simple ']' •

    '='  reduce using rule 29 (bracketsimplebracketoptionall)


State 122

   32 exprorarraysimple: ARRAY • simple
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 166
    simple         go to state 135


State 123

   33 assign: LET ID bracketsimplebracketoptionall '=' exprorarraysimple •

    END  reduce using rule 33 (assign)
    ';'  reduce using rule 33 (assign)


State 124

   31 exprorarraysimple: expr •

    END  reduce using rule 31 (exprorarraysimple)
    ';'  reduce using rule 31 (exprorarraysimple)


State 125

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 136


State 126

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 137


State 127

   81 factor: '(' expr ')' •

    END  reduce using rule 81 (factor)
    EQ   reduce using rule 81 (factor)
    GEQ  reduce using rule 81 (factor)
    GT   reduce using rule 81 (factor)
    LEQ  reduce using rule 81 (factor)
    LT   reduce using rule 81 (factor)
    NEQ  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ';'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 128

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 138
    addop          go to state 108


State 129

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 139
    mulop            go to state 114


State 130

   37 commaexprstar: ',' • expr commaexprstar
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 140
    minusoptional  go to state 167
    simple         go to state 168


State 131

   39 doN: DO ID '(' expr commaexprstar • ')'

    ')'  shift, and go to state 141


State 132

   40 elifexprcolonstatementsstar: ELIF • expr ':' statements elifexprcolonstatementsstar
   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 142
    minusoptional  go to state 154
    simple         go to state 155


State 133

   42 elsecolonstatementsoptional: • ELSE ':' statements
   43                            | ε •
   44 ifN: IF expr ':' statements elifexprcolonstatementsstar • elsecolonstatementsoptional

    ELSE  shift, and go to state 143

    END  reduce using rule 43 (elsecolonstatementsoptional)
    ';'  reduce using rule 43 (elsecolonstatementsoptional)

    elsecolonstatementsoptional  go to state 144


State 134

   48 andstringexprstar: '&' stringexpr andstringexprstar •

    END  reduce using rule 48 (andstringexprstar)
    ';'  reduce using rule 48 (andstringexprstar)


State 135

   32 exprorarraysimple: ARRAY simple •

    END  reduce using rule 32 (exprorarraysimple)
    ';'  reduce using rule 32 (exprorarraysimple)


State 136

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    END  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    EQ   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 137

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 145


State 138

   63 addoptermstar: addop term addoptermstar •

    END  reduce using rule 63 (addoptermstar)
    EQ   reduce using rule 63 (addoptermstar)
    GEQ  reduce using rule 63 (addoptermstar)
    GT   reduce using rule 63 (addoptermstar)
    LEQ  reduce using rule 63 (addoptermstar)
    LT   reduce using rule 63 (addoptermstar)
    NEQ  reduce using rule 63 (addoptermstar)
    ';'  reduce using rule 63 (addoptermstar)


State 139

   69 mulopfactorstar: mulop factor mulopfactorstar •

    END  reduce using rule 69 (mulopfactorstar)
    EQ   reduce using rule 69 (mulopfactorstar)
    GEQ  reduce using rule 69 (mulopfactorstar)
    GT   reduce using rule 69 (mulopfactorstar)
    LEQ  reduce using rule 69 (mulopfactorstar)
    LT   reduce using rule 69 (mulopfactorstar)
    NEQ  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ';'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 140

   37 commaexprstar: • ',' expr commaexprstar
   37              | ',' expr • commaexprstar
   38              | ε •

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 146


State 141

   39 doN: DO ID '(' expr commaexprstar ')' •

    END  reduce using rule 39 (doN)
    ';'  reduce using rule 39 (doN)


State 142

   40 elifexprcolonstatementsstar: ELIF expr • ':' statements elifexprcolonstatementsstar

    ':'  shift, and go to state 147


State 143

   42 elsecolonstatementsoptional: ELSE • ':' statements

    ':'  shift, and go to state 148


State 144

   44 ifN: IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional •

    END  reduce using rule 44 (ifN)
    ';'  reduce using rule 44 (ifN)


State 145

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    END  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    EQ   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 146

   37 commaexprstar: ',' expr commaexprstar •

    ')'  reduce using rule 37 (commaexprstar)


State 147

   20 statements: • CHILLAX
   21           | • statement semicolonstatementstar END
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   40 elifexprcolonstatementsstar: ELIF expr ':' • statements elifexprcolonstatementsstar
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements

    CHILLAX  shift, and go to state 169
    LET      shift, and go to state 25
    BACK     shift, and go to state 26
    DO       shift, and go to state 27
    IF       shift, and go to state 28
    INPUT    shift, and go to state 29
    OUTPUT   shift, and go to state 30
    WHILE    shift, and go to state 31

    statements  go to state 149
    statement   go to state 170
    assign      go to state 34
    backN       go to state 35
    doN         go to state 36
    ifN         go to state 37
    inputN      go to state 38
    outputN     go to state 39
    whileN      go to state 40


State 148

   20 statements: • CHILLAX
   21           | • statement semicolonstatementstar END
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   42 elsecolonstatementsoptional: ELSE ':' • statements
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements

    CHILLAX  shift, and go to state 171
    LET      shift, and go to state 25
    BACK     shift, and go to state 26
    DO       shift, and go to state 27
    IF       shift, and go to state 28
    INPUT    shift, and go to state 29
    OUTPUT   shift, and go to state 30
    WHILE    shift, and go to state 31

    statements  go to state 150
    statement   go to state 172
    assign      go to state 34
    backN       go to state 35
    doN         go to state 36
    ifN         go to state 37
    inputN      go to state 38
    outputN     go to state 39
    whileN      go to state 40


State 149

   40 elifexprcolonstatementsstar: • ELIF expr ':' statements elifexprcolonstatementsstar
   40                            | ELIF expr ':' statements • elifexprcolonstatementsstar
   41                            | ε •

    ELIF  shift, and go to state 132

    END   reduce using rule 41 (elifexprcolonstatementsstar)
    ELSE  reduce using rule 41 (elifexprcolonstatementsstar)
    ';'   reduce using rule 41 (elifexprcolonstatementsstar)

    elifexprcolonstatementsstar  go to state 151


State 150

   42 elsecolonstatementsoptional: ELSE ':' statements •

    END  reduce using rule 42 (elsecolonstatementsoptional)
    ';'  reduce using rule 42 (elsecolonstatementsoptional)


State 151

   40 elifexprcolonstatementsstar: ELIF expr ':' statements elifexprcolonstatementsstar •

    END   reduce using rule 40 (elifexprcolonstatementsstar)
    ELSE  reduce using rule 40 (elifexprcolonstatementsstar)
    ';'   reduce using rule 40 (elifexprcolonstatementsstar)


State 152

   10 commaidstar: • ',' ID commaidstar
   11            | ε •
   12 varseq: ID • commaidstar AS type

    ','  shift, and go to state 19

    AS  reduce using rule 11 (commaidstar)

    commaidstar  go to state 173


State 153

    4 semicolonvarseqstar: ';' • varseq semicolonvarseqstar
   12 varseq: • ID commaidstar AS type

    ID  shift, and go to state 152

    varseq  go to state 174


State 154

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 175
    TRUE   shift, and go to state 176
    FALSE  shift, and go to state 177
    NUM    shift, and go to state 178
    NOT    shift, and go to state 179
    '('    shift, and go to state 180

    term    go to state 181
    factor  go to state 182


State 155

   52 reloporsimpleoptional: • relop simple
   53                      | ε •
   54 expr: simple • reloporsimpleoptional
   55 relop: • EQ
   56      | • GEQ
   57      | • GT
   58      | • LEQ
   59      | • LT
   60      | • NEQ

    EQ   shift, and go to state 78
    GEQ  shift, and go to state 79
    GT   shift, and go to state 80
    LEQ  shift, and go to state 81
    LT   shift, and go to state 82
    NEQ  shift, and go to state 83

    ':'  reduce using rule 53 (reloporsimpleoptional)

    reloporsimpleoptional  go to state 183
    relop                  go to state 184


State 156

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 185
    TRUE   shift, and go to state 186
    FALSE  shift, and go to state 187
    NUM    shift, and go to state 188
    NOT    shift, and go to state 189
    '('    shift, and go to state 190

    term    go to state 191
    factor  go to state 192


State 157

   52 reloporsimpleoptional: • relop simple
   53                      | ε •
   54 expr: simple • reloporsimpleoptional
   55 relop: • EQ
   56      | • GEQ
   57      | • GT
   58      | • LEQ
   59      | • LT
   60      | • NEQ

    EQ   shift, and go to state 78
    GEQ  shift, and go to state 79
    GT   shift, and go to state 80
    LEQ  shift, and go to state 81
    LT   shift, and go to state 82
    NEQ  shift, and go to state 83

    END  reduce using rule 53 (reloporsimpleoptional)
    ';'  reduce using rule 53 (reloporsimpleoptional)
    '&'  reduce using rule 53 (reloporsimpleoptional)

    reloporsimpleoptional  go to state 193
    relop                  go to state 194


State 158

   13 boleanorinteger: BOOLEAN •

    ARRAY    reduce using rule 13 (boleanorinteger)
    CHILLAX  reduce using rule 13 (boleanorinteger)
    VARS     reduce using rule 13 (boleanorinteger)
    LET      reduce using rule 13 (boleanorinteger)
    BACK     reduce using rule 13 (boleanorinteger)
    DO       reduce using rule 13 (boleanorinteger)
    IF       reduce using rule 13 (boleanorinteger)
    INPUT    reduce using rule 13 (boleanorinteger)
    OUTPUT   reduce using rule 13 (boleanorinteger)
    WHILE    reduce using rule 13 (boleanorinteger)


State 159

   14 boleanorinteger: INTEGER •

    ARRAY    reduce using rule 14 (boleanorinteger)
    CHILLAX  reduce using rule 14 (boleanorinteger)
    VARS     reduce using rule 14 (boleanorinteger)
    LET      reduce using rule 14 (boleanorinteger)
    BACK     reduce using rule 14 (boleanorinteger)
    DO       reduce using rule 14 (boleanorinteger)
    IF       reduce using rule 14 (boleanorinteger)
    INPUT    reduce using rule 14 (boleanorinteger)
    OUTPUT   reduce using rule 14 (boleanorinteger)
    WHILE    reduce using rule 14 (boleanorinteger)


State 160

   15 arrayoptional: • ARRAY
   16              | ε •
   17 type: boleanorinteger • arrayoptional

    ARRAY  shift, and go to state 195

    CHILLAX  reduce using rule 16 (arrayoptional)
    VARS     reduce using rule 16 (arrayoptional)
    LET      reduce using rule 16 (arrayoptional)
    BACK     reduce using rule 16 (arrayoptional)
    DO       reduce using rule 16 (arrayoptional)
    IF       reduce using rule 16 (arrayoptional)
    INPUT    reduce using rule 16 (arrayoptional)
    OUTPUT   reduce using rule 16 (arrayoptional)
    WHILE    reduce using rule 16 (arrayoptional)

    arrayoptional  go to state 196


State 161

   29 bracketsimplebracketoptionall: '[' • simple ']'
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 197


State 162

    9 body: varsvarseqsemicolonvarseqstaroptional • statements
   20 statements: • CHILLAX
   21           | • statement semicolonstatementstar END
   22 statement: • assign
   23          | • backN
   24          | • doN
   25          | • ifN
   26          | • inputN
   27          | • outputN
   28          | • whileN
   33 assign: • LET ID bracketsimplebracketoptionall '=' exprorarraysimple
   36 backN: • BACK exproptional
   39 doN: • DO ID '(' expr commaexprstar ')'
   44 ifN: • IF expr ':' statements elifexprcolonstatementsstar elsecolonstatementsoptional
   45 inputN: • INPUT ID bracketsimplebracketoptionall
   50 outputN: • OUTPUT stringexpr andstringexprstar
   51 whileN: • WHILE expr ':' statements

    CHILLAX  shift, and go to state 198
    LET      shift, and go to state 25
    BACK     shift, and go to state 26
    DO       shift, and go to state 27
    IF       shift, and go to state 28
    INPUT    shift, and go to state 29
    OUTPUT   shift, and go to state 30
    WHILE    shift, and go to state 31

    statements  go to state 199
    statement   go to state 200
    assign      go to state 34
    backN       go to state 35
    doN         go to state 36
    ifN         go to state 37
    inputN      go to state 38
    outputN     go to state 39
    whileN      go to state 40


State 163

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 201
    TRUE   shift, and go to state 202
    FALSE  shift, and go to state 203
    NUM    shift, and go to state 204
    NOT    shift, and go to state 205
    '('    shift, and go to state 206

    term    go to state 207
    factor  go to state 208


State 164

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 209
    TRUE   shift, and go to state 210
    FALSE  shift, and go to state 211
    NUM    shift, and go to state 212
    NOT    shift, and go to state 213
    '('    shift, and go to state 214

    term    go to state 215
    factor  go to state 216


State 165

   52 reloporsimpleoptional: • relop simple
   53                      | ε •
   54 expr: simple • reloporsimpleoptional
   55 relop: • EQ
   56      | • GEQ
   57      | • GT
   58      | • LEQ
   59      | • LT
   60      | • NEQ

    EQ   shift, and go to state 78
    GEQ  shift, and go to state 79
    GT   shift, and go to state 80
    LEQ  shift, and go to state 81
    LT   shift, and go to state 82
    NEQ  shift, and go to state 83

    ')'  reduce using rule 53 (reloporsimpleoptional)

    reloporsimpleoptional  go to state 217
    relop                  go to state 218


State 166

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 219
    TRUE   shift, and go to state 220
    FALSE  shift, and go to state 221
    NUM    shift, and go to state 222
    NOT    shift, and go to state 223
    '('    shift, and go to state 224

    term    go to state 225
    factor  go to state 226


State 167

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 227
    TRUE   shift, and go to state 228
    FALSE  shift, and go to state 229
    NUM    shift, and go to state 230
    NOT    shift, and go to state 231
    '('    shift, and go to state 232

    term    go to state 233
    factor  go to state 234


State 168

   52 reloporsimpleoptional: • relop simple
   53                      | ε •
   54 expr: simple • reloporsimpleoptional
   55 relop: • EQ
   56      | • GEQ
   57      | • GT
   58      | • LEQ
   59      | • LT
   60      | • NEQ

    EQ   shift, and go to state 78
    GEQ  shift, and go to state 79
    GT   shift, and go to state 80
    LEQ  shift, and go to state 81
    LT   shift, and go to state 82
    NEQ  shift, and go to state 83

    ','  reduce using rule 53 (reloporsimpleoptional)
    ')'  reduce using rule 53 (reloporsimpleoptional)

    reloporsimpleoptional  go to state 235
    relop                  go to state 236


State 169

   20 statements: CHILLAX •

    END   reduce using rule 20 (statements)
    ELIF  reduce using rule 20 (statements)
    ELSE  reduce using rule 20 (statements)
    ';'   reduce using rule 20 (statements)


State 170

   18 semicolonstatementstar: • ';' statement semicolonstatementstar
   19                       | ε •
   21 statements: statement • semicolonstatementstar END

    ';'  shift, and go to state 59

    END  reduce using rule 19 (semicolonstatementstar)

    semicolonstatementstar  go to state 237


State 171

   20 statements: CHILLAX •

    END  reduce using rule 20 (statements)
    ';'  reduce using rule 20 (statements)


State 172

   18 semicolonstatementstar: • ';' statement semicolonstatementstar
   19                       | ε •
   21 statements: statement • semicolonstatementstar END

    ';'  shift, and go to state 59

    END  reduce using rule 19 (semicolonstatementstar)

    semicolonstatementstar  go to state 238


State 173

   12 varseq: ID commaidstar • AS type

    AS  shift, and go to state 239


State 174

    4 semicolonvarseqstar: • ';' varseq semicolonvarseqstar
    4                    | ';' varseq • semicolonvarseqstar
    5                    | ε •

    ';'  shift, and go to state 153

    CHILLAX  reduce using rule 5 (semicolonvarseqstar)
    LET      reduce using rule 5 (semicolonvarseqstar)
    BACK     reduce using rule 5 (semicolonvarseqstar)
    DO       reduce using rule 5 (semicolonvarseqstar)
    IF       reduce using rule 5 (semicolonvarseqstar)
    INPUT    reduce using rule 5 (semicolonvarseqstar)
    OUTPUT   reduce using rule 5 (semicolonvarseqstar)
    WHILE    reduce using rule 5 (semicolonvarseqstar)

    semicolonvarseqstar  go to state 240


State 175

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 241
    '('  shift, and go to state 242

    EQ   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ':'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 243


State 176

   83 factor: TRUE •

    EQ   reduce using rule 83 (factor)
    GEQ  reduce using rule 83 (factor)
    GT   reduce using rule 83 (factor)
    LEQ  reduce using rule 83 (factor)
    LT   reduce using rule 83 (factor)
    NEQ  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ':'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 177

   84 factor: FALSE •

    EQ   reduce using rule 84 (factor)
    GEQ  reduce using rule 84 (factor)
    GT   reduce using rule 84 (factor)
    LEQ  reduce using rule 84 (factor)
    LT   reduce using rule 84 (factor)
    NEQ  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ':'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 178

   80 factor: NUM •

    EQ   reduce using rule 80 (factor)
    GEQ  reduce using rule 80 (factor)
    GT   reduce using rule 80 (factor)
    LEQ  reduce using rule 80 (factor)
    LT   reduce using rule 80 (factor)
    NEQ  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ':'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 179

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 175
    TRUE   shift, and go to state 176
    FALSE  shift, and go to state 177
    NUM    shift, and go to state 178
    NOT    shift, and go to state 179
    '('    shift, and go to state 180

    factor  go to state 244


State 180

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 245
    minusoptional  go to state 164
    simple         go to state 165


State 181

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ':'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 246
    addop          go to state 247


State 182

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ':'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 248
    mulop            go to state 249


State 183

   54 expr: simple reloporsimpleoptional •

    ':'  reduce using rule 54 (expr)


State 184

   52 reloporsimpleoptional: relop • simple
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 250
    simple         go to state 251


State 185

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 252
    '('  shift, and go to state 253

    END  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    EQ   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '&'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 254


State 186

   83 factor: TRUE •

    END  reduce using rule 83 (factor)
    EQ   reduce using rule 83 (factor)
    GEQ  reduce using rule 83 (factor)
    GT   reduce using rule 83 (factor)
    LEQ  reduce using rule 83 (factor)
    LT   reduce using rule 83 (factor)
    NEQ  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ';'  reduce using rule 83 (factor)
    '&'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 187

   84 factor: FALSE •

    END  reduce using rule 84 (factor)
    EQ   reduce using rule 84 (factor)
    GEQ  reduce using rule 84 (factor)
    GT   reduce using rule 84 (factor)
    LEQ  reduce using rule 84 (factor)
    LT   reduce using rule 84 (factor)
    NEQ  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ';'  reduce using rule 84 (factor)
    '&'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 188

   80 factor: NUM •

    END  reduce using rule 80 (factor)
    EQ   reduce using rule 80 (factor)
    GEQ  reduce using rule 80 (factor)
    GT   reduce using rule 80 (factor)
    LEQ  reduce using rule 80 (factor)
    LT   reduce using rule 80 (factor)
    NEQ  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ';'  reduce using rule 80 (factor)
    '&'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 189

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 185
    TRUE   shift, and go to state 186
    FALSE  shift, and go to state 187
    NUM    shift, and go to state 188
    NOT    shift, and go to state 189
    '('    shift, and go to state 190

    factor  go to state 255


State 190

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 256
    minusoptional  go to state 164
    simple         go to state 165


State 191

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)
    '&'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 257
    addop          go to state 258


State 192

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '&'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 259
    mulop            go to state 260


State 193

   54 expr: simple reloporsimpleoptional •

    END  reduce using rule 54 (expr)
    ';'  reduce using rule 54 (expr)
    '&'  reduce using rule 54 (expr)


State 194

   52 reloporsimpleoptional: relop • simple
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 261
    simple         go to state 262


State 195

   15 arrayoptional: ARRAY •

    CHILLAX  reduce using rule 15 (arrayoptional)
    VARS     reduce using rule 15 (arrayoptional)
    LET      reduce using rule 15 (arrayoptional)
    BACK     reduce using rule 15 (arrayoptional)
    DO       reduce using rule 15 (arrayoptional)
    IF       reduce using rule 15 (arrayoptional)
    INPUT    reduce using rule 15 (arrayoptional)
    OUTPUT   reduce using rule 15 (arrayoptional)
    WHILE    reduce using rule 15 (arrayoptional)


State 196

   17 type: boleanorinteger arrayoptional •

    CHILLAX  reduce using rule 17 (type)
    VARS     reduce using rule 17 (type)
    LET      reduce using rule 17 (type)
    BACK     reduce using rule 17 (type)
    DO       reduce using rule 17 (type)
    IF       reduce using rule 17 (type)
    INPUT    reduce using rule 17 (type)
    OUTPUT   reduce using rule 17 (type)
    WHILE    reduce using rule 17 (type)


State 197

   29 bracketsimplebracketoptionall: '[' simple • ']'

    ']'  shift, and go to state 263


State 198

   20 statements: CHILLAX •

    ID    reduce using rule 20 (statements)
    MAIN  reduce using rule 20 (statements)


State 199

    9 body: varsvarseqsemicolonvarseqstaroptional statements •

    ID    reduce using rule 9 (body)
    MAIN  reduce using rule 9 (body)


State 200

   18 semicolonstatementstar: • ';' statement semicolonstatementstar
   19                       | ε •
   21 statements: statement • semicolonstatementstar END

    ';'  shift, and go to state 59

    END  reduce using rule 19 (semicolonstatementstar)

    semicolonstatementstar  go to state 264


State 201

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 265
    '('  shift, and go to state 266

    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ']'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 267


State 202

   83 factor: TRUE •

    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ']'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 203

   84 factor: FALSE •

    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ']'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 204

   80 factor: NUM •

    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ']'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 205

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 201
    TRUE   shift, and go to state 202
    FALSE  shift, and go to state 203
    NUM    shift, and go to state 204
    NOT    shift, and go to state 205
    '('    shift, and go to state 206

    factor  go to state 268


State 206

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 269
    minusoptional  go to state 164
    simple         go to state 165


State 207

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ']'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 270
    addop          go to state 271


State 208

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ']'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 272
    mulop            go to state 273


State 209

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 274
    '('  shift, and go to state 275

    EQ   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 276


State 210

   83 factor: TRUE •

    EQ   reduce using rule 83 (factor)
    GEQ  reduce using rule 83 (factor)
    GT   reduce using rule 83 (factor)
    LEQ  reduce using rule 83 (factor)
    LT   reduce using rule 83 (factor)
    NEQ  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ')'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 211

   84 factor: FALSE •

    EQ   reduce using rule 84 (factor)
    GEQ  reduce using rule 84 (factor)
    GT   reduce using rule 84 (factor)
    LEQ  reduce using rule 84 (factor)
    LT   reduce using rule 84 (factor)
    NEQ  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ')'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 212

   80 factor: NUM •

    EQ   reduce using rule 80 (factor)
    GEQ  reduce using rule 80 (factor)
    GT   reduce using rule 80 (factor)
    LEQ  reduce using rule 80 (factor)
    LT   reduce using rule 80 (factor)
    NEQ  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ')'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 213

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 209
    TRUE   shift, and go to state 210
    FALSE  shift, and go to state 211
    NUM    shift, and go to state 212
    NOT    shift, and go to state 213
    '('    shift, and go to state 214

    factor  go to state 277


State 214

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 278
    minusoptional  go to state 164
    simple         go to state 165


State 215

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 279
    addop          go to state 280


State 216

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 281
    mulop            go to state 282


State 217

   54 expr: simple reloporsimpleoptional •

    ')'  reduce using rule 54 (expr)


State 218

   52 reloporsimpleoptional: relop • simple
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 283
    simple         go to state 284


State 219

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 285
    '('  shift, and go to state 286

    END  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 287


State 220

   83 factor: TRUE •

    END  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ';'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 221

   84 factor: FALSE •

    END  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ';'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 222

   80 factor: NUM •

    END  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ';'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 223

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 219
    TRUE   shift, and go to state 220
    FALSE  shift, and go to state 221
    NUM    shift, and go to state 222
    NOT    shift, and go to state 223
    '('    shift, and go to state 224

    factor  go to state 288


State 224

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 289
    minusoptional  go to state 164
    simple         go to state 165


State 225

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 290
    addop          go to state 291


State 226

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 292
    mulop            go to state 293


State 227

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 294
    '('  shift, and go to state 295

    EQ   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ','  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 296


State 228

   83 factor: TRUE •

    EQ   reduce using rule 83 (factor)
    GEQ  reduce using rule 83 (factor)
    GT   reduce using rule 83 (factor)
    LEQ  reduce using rule 83 (factor)
    LT   reduce using rule 83 (factor)
    NEQ  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ','  reduce using rule 83 (factor)
    ')'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 229

   84 factor: FALSE •

    EQ   reduce using rule 84 (factor)
    GEQ  reduce using rule 84 (factor)
    GT   reduce using rule 84 (factor)
    LEQ  reduce using rule 84 (factor)
    LT   reduce using rule 84 (factor)
    NEQ  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ','  reduce using rule 84 (factor)
    ')'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 230

   80 factor: NUM •

    EQ   reduce using rule 80 (factor)
    GEQ  reduce using rule 80 (factor)
    GT   reduce using rule 80 (factor)
    LEQ  reduce using rule 80 (factor)
    LT   reduce using rule 80 (factor)
    NEQ  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ','  reduce using rule 80 (factor)
    ')'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 231

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 227
    TRUE   shift, and go to state 228
    FALSE  shift, and go to state 229
    NUM    shift, and go to state 230
    NOT    shift, and go to state 231
    '('    shift, and go to state 232

    factor  go to state 297


State 232

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 298
    minusoptional  go to state 164
    simple         go to state 165


State 233

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ','  reduce using rule 64 (addoptermstar)
    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 299
    addop          go to state 300


State 234

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ','  reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 301
    mulop            go to state 302


State 235

   54 expr: simple reloporsimpleoptional •

    ','  reduce using rule 54 (expr)
    ')'  reduce using rule 54 (expr)


State 236

   52 reloporsimpleoptional: relop • simple
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 303
    simple         go to state 304


State 237

   21 statements: statement semicolonstatementstar • END

    END  shift, and go to state 305


State 238

   21 statements: statement semicolonstatementstar • END

    END  shift, and go to state 306


State 239

   12 varseq: ID commaidstar AS • type
   13 boleanorinteger: • BOOLEAN
   14                | • INTEGER
   17 type: • boleanorinteger arrayoptional

    BOOLEAN  shift, and go to state 307
    INTEGER  shift, and go to state 308

    boleanorinteger  go to state 309
    type             go to state 310


State 240

    4 semicolonvarseqstar: ';' varseq semicolonvarseqstar •

    CHILLAX  reduce using rule 4 (semicolonvarseqstar)
    LET      reduce using rule 4 (semicolonvarseqstar)
    BACK     reduce using rule 4 (semicolonvarseqstar)
    DO       reduce using rule 4 (semicolonvarseqstar)
    IF       reduce using rule 4 (semicolonvarseqstar)
    INPUT    reduce using rule 4 (semicolonvarseqstar)
    OUTPUT   reduce using rule 4 (semicolonvarseqstar)
    WHILE    reduce using rule 4 (semicolonvarseqstar)


State 241

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 311


State 242

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 312
    minusoptional  go to state 167
    simple         go to state 168


State 243

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    EQ   reduce using rule 79 (factor)
    GEQ  reduce using rule 79 (factor)
    GT   reduce using rule 79 (factor)
    LEQ  reduce using rule 79 (factor)
    LT   reduce using rule 79 (factor)
    NEQ  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ':'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 244

   82 factor: NOT factor •

    EQ   reduce using rule 82 (factor)
    GEQ  reduce using rule 82 (factor)
    GT   reduce using rule 82 (factor)
    LEQ  reduce using rule 82 (factor)
    LT   reduce using rule 82 (factor)
    NEQ  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ':'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 245

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 313


State 246

   65 simple: minusoptional term addoptermstar •

    EQ   reduce using rule 65 (simple)
    GEQ  reduce using rule 65 (simple)
    GT   reduce using rule 65 (simple)
    LEQ  reduce using rule 65 (simple)
    LT   reduce using rule 65 (simple)
    NEQ  reduce using rule 65 (simple)
    ':'  reduce using rule 65 (simple)


State 247

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 175
    TRUE   shift, and go to state 176
    FALSE  shift, and go to state 177
    NUM    shift, and go to state 178
    NOT    shift, and go to state 179
    '('    shift, and go to state 180

    term    go to state 314
    factor  go to state 182


State 248

   71 term: factor mulopfactorstar •

    EQ   reduce using rule 71 (term)
    GEQ  reduce using rule 71 (term)
    GT   reduce using rule 71 (term)
    LEQ  reduce using rule 71 (term)
    LT   reduce using rule 71 (term)
    NEQ  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ':'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 249

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 175
    TRUE   shift, and go to state 176
    FALSE  shift, and go to state 177
    NUM    shift, and go to state 178
    NOT    shift, and go to state 179
    '('    shift, and go to state 180

    factor  go to state 315


State 250

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 316
    TRUE   shift, and go to state 317
    FALSE  shift, and go to state 318
    NUM    shift, and go to state 319
    NOT    shift, and go to state 320
    '('    shift, and go to state 321

    term    go to state 322
    factor  go to state 323


State 251

   52 reloporsimpleoptional: relop simple •

    ':'  reduce using rule 52 (reloporsimpleoptional)


State 252

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 324


State 253

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 325
    minusoptional  go to state 167
    simple         go to state 168


State 254

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    END  reduce using rule 79 (factor)
    EQ   reduce using rule 79 (factor)
    GEQ  reduce using rule 79 (factor)
    GT   reduce using rule 79 (factor)
    LEQ  reduce using rule 79 (factor)
    LT   reduce using rule 79 (factor)
    NEQ  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ';'  reduce using rule 79 (factor)
    '&'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 255

   82 factor: NOT factor •

    END  reduce using rule 82 (factor)
    EQ   reduce using rule 82 (factor)
    GEQ  reduce using rule 82 (factor)
    GT   reduce using rule 82 (factor)
    LEQ  reduce using rule 82 (factor)
    LT   reduce using rule 82 (factor)
    NEQ  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ';'  reduce using rule 82 (factor)
    '&'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 256

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 326


State 257

   65 simple: minusoptional term addoptermstar •

    END  reduce using rule 65 (simple)
    EQ   reduce using rule 65 (simple)
    GEQ  reduce using rule 65 (simple)
    GT   reduce using rule 65 (simple)
    LEQ  reduce using rule 65 (simple)
    LT   reduce using rule 65 (simple)
    NEQ  reduce using rule 65 (simple)
    ';'  reduce using rule 65 (simple)
    '&'  reduce using rule 65 (simple)


State 258

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 185
    TRUE   shift, and go to state 186
    FALSE  shift, and go to state 187
    NUM    shift, and go to state 188
    NOT    shift, and go to state 189
    '('    shift, and go to state 190

    term    go to state 327
    factor  go to state 192


State 259

   71 term: factor mulopfactorstar •

    END  reduce using rule 71 (term)
    EQ   reduce using rule 71 (term)
    GEQ  reduce using rule 71 (term)
    GT   reduce using rule 71 (term)
    LEQ  reduce using rule 71 (term)
    LT   reduce using rule 71 (term)
    NEQ  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ';'  reduce using rule 71 (term)
    '&'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 260

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 185
    TRUE   shift, and go to state 186
    FALSE  shift, and go to state 187
    NUM    shift, and go to state 188
    NOT    shift, and go to state 189
    '('    shift, and go to state 190

    factor  go to state 328


State 261

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 329
    TRUE   shift, and go to state 330
    FALSE  shift, and go to state 331
    NUM    shift, and go to state 332
    NOT    shift, and go to state 333
    '('    shift, and go to state 334

    term    go to state 335
    factor  go to state 336


State 262

   52 reloporsimpleoptional: relop simple •

    END  reduce using rule 52 (reloporsimpleoptional)
    ';'  reduce using rule 52 (reloporsimpleoptional)
    '&'  reduce using rule 52 (reloporsimpleoptional)


State 263

   29 bracketsimplebracketoptionall: '[' simple ']' •

    END  reduce using rule 29 (bracketsimplebracketoptionall)
    ';'  reduce using rule 29 (bracketsimplebracketoptionall)


State 264

   21 statements: statement semicolonstatementstar • END

    END  shift, and go to state 337


State 265

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 338


State 266

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 339
    minusoptional  go to state 167
    simple         go to state 168


State 267

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ']'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 268

   82 factor: NOT factor •

    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ']'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 269

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 340


State 270

   65 simple: minusoptional term addoptermstar •

    ']'  reduce using rule 65 (simple)


State 271

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 201
    TRUE   shift, and go to state 202
    FALSE  shift, and go to state 203
    NUM    shift, and go to state 204
    NOT    shift, and go to state 205
    '('    shift, and go to state 206

    term    go to state 341
    factor  go to state 208


State 272

   71 term: factor mulopfactorstar •

    OR   reduce using rule 71 (term)
    ']'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 273

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 201
    TRUE   shift, and go to state 202
    FALSE  shift, and go to state 203
    NUM    shift, and go to state 204
    NOT    shift, and go to state 205
    '('    shift, and go to state 206

    factor  go to state 342


State 274

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 343


State 275

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 344
    minusoptional  go to state 167
    simple         go to state 168


State 276

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    EQ   reduce using rule 79 (factor)
    GEQ  reduce using rule 79 (factor)
    GT   reduce using rule 79 (factor)
    LEQ  reduce using rule 79 (factor)
    LT   reduce using rule 79 (factor)
    NEQ  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ')'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 277

   82 factor: NOT factor •

    EQ   reduce using rule 82 (factor)
    GEQ  reduce using rule 82 (factor)
    GT   reduce using rule 82 (factor)
    LEQ  reduce using rule 82 (factor)
    LT   reduce using rule 82 (factor)
    NEQ  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ')'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 278

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 345


State 279

   65 simple: minusoptional term addoptermstar •

    EQ   reduce using rule 65 (simple)
    GEQ  reduce using rule 65 (simple)
    GT   reduce using rule 65 (simple)
    LEQ  reduce using rule 65 (simple)
    LT   reduce using rule 65 (simple)
    NEQ  reduce using rule 65 (simple)
    ')'  reduce using rule 65 (simple)


State 280

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 209
    TRUE   shift, and go to state 210
    FALSE  shift, and go to state 211
    NUM    shift, and go to state 212
    NOT    shift, and go to state 213
    '('    shift, and go to state 214

    term    go to state 346
    factor  go to state 216


State 281

   71 term: factor mulopfactorstar •

    EQ   reduce using rule 71 (term)
    GEQ  reduce using rule 71 (term)
    GT   reduce using rule 71 (term)
    LEQ  reduce using rule 71 (term)
    LT   reduce using rule 71 (term)
    NEQ  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ')'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 282

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 209
    TRUE   shift, and go to state 210
    FALSE  shift, and go to state 211
    NUM    shift, and go to state 212
    NOT    shift, and go to state 213
    '('    shift, and go to state 214

    factor  go to state 347


State 283

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 348
    TRUE   shift, and go to state 349
    FALSE  shift, and go to state 350
    NUM    shift, and go to state 351
    NOT    shift, and go to state 352
    '('    shift, and go to state 353

    term    go to state 354
    factor  go to state 355


State 284

   52 reloporsimpleoptional: relop simple •

    ')'  reduce using rule 52 (reloporsimpleoptional)


State 285

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 356


State 286

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 357
    minusoptional  go to state 167
    simple         go to state 168


State 287

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    END  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ';'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 288

   82 factor: NOT factor •

    END  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ';'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 289

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 358


State 290

   65 simple: minusoptional term addoptermstar •

    END  reduce using rule 65 (simple)
    ';'  reduce using rule 65 (simple)


State 291

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 219
    TRUE   shift, and go to state 220
    FALSE  shift, and go to state 221
    NUM    shift, and go to state 222
    NOT    shift, and go to state 223
    '('    shift, and go to state 224

    term    go to state 359
    factor  go to state 226


State 292

   71 term: factor mulopfactorstar •

    END  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ';'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 293

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 219
    TRUE   shift, and go to state 220
    FALSE  shift, and go to state 221
    NUM    shift, and go to state 222
    NOT    shift, and go to state 223
    '('    shift, and go to state 224

    factor  go to state 360


State 294

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 361


State 295

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 362
    minusoptional  go to state 167
    simple         go to state 168


State 296

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    EQ   reduce using rule 79 (factor)
    GEQ  reduce using rule 79 (factor)
    GT   reduce using rule 79 (factor)
    LEQ  reduce using rule 79 (factor)
    LT   reduce using rule 79 (factor)
    NEQ  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ','  reduce using rule 79 (factor)
    ')'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 297

   82 factor: NOT factor •

    EQ   reduce using rule 82 (factor)
    GEQ  reduce using rule 82 (factor)
    GT   reduce using rule 82 (factor)
    LEQ  reduce using rule 82 (factor)
    LT   reduce using rule 82 (factor)
    NEQ  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ','  reduce using rule 82 (factor)
    ')'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 298

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 363


State 299

   65 simple: minusoptional term addoptermstar •

    EQ   reduce using rule 65 (simple)
    GEQ  reduce using rule 65 (simple)
    GT   reduce using rule 65 (simple)
    LEQ  reduce using rule 65 (simple)
    LT   reduce using rule 65 (simple)
    NEQ  reduce using rule 65 (simple)
    ','  reduce using rule 65 (simple)
    ')'  reduce using rule 65 (simple)


State 300

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 227
    TRUE   shift, and go to state 228
    FALSE  shift, and go to state 229
    NUM    shift, and go to state 230
    NOT    shift, and go to state 231
    '('    shift, and go to state 232

    term    go to state 364
    factor  go to state 234


State 301

   71 term: factor mulopfactorstar •

    EQ   reduce using rule 71 (term)
    GEQ  reduce using rule 71 (term)
    GT   reduce using rule 71 (term)
    LEQ  reduce using rule 71 (term)
    LT   reduce using rule 71 (term)
    NEQ  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ','  reduce using rule 71 (term)
    ')'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 302

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 227
    TRUE   shift, and go to state 228
    FALSE  shift, and go to state 229
    NUM    shift, and go to state 230
    NOT    shift, and go to state 231
    '('    shift, and go to state 232

    factor  go to state 365


State 303

   65 simple: minusoptional • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 366
    TRUE   shift, and go to state 367
    FALSE  shift, and go to state 368
    NUM    shift, and go to state 369
    NOT    shift, and go to state 370
    '('    shift, and go to state 371

    term    go to state 372
    factor  go to state 373


State 304

   52 reloporsimpleoptional: relop simple •

    ','  reduce using rule 52 (reloporsimpleoptional)
    ')'  reduce using rule 52 (reloporsimpleoptional)


State 305

   21 statements: statement semicolonstatementstar END •

    END   reduce using rule 21 (statements)
    ELIF  reduce using rule 21 (statements)
    ELSE  reduce using rule 21 (statements)
    ';'   reduce using rule 21 (statements)


State 306

   21 statements: statement semicolonstatementstar END •

    END  reduce using rule 21 (statements)
    ';'  reduce using rule 21 (statements)


State 307

   13 boleanorinteger: BOOLEAN •

    ARRAY    reduce using rule 13 (boleanorinteger)
    CHILLAX  reduce using rule 13 (boleanorinteger)
    LET      reduce using rule 13 (boleanorinteger)
    BACK     reduce using rule 13 (boleanorinteger)
    DO       reduce using rule 13 (boleanorinteger)
    IF       reduce using rule 13 (boleanorinteger)
    INPUT    reduce using rule 13 (boleanorinteger)
    OUTPUT   reduce using rule 13 (boleanorinteger)
    WHILE    reduce using rule 13 (boleanorinteger)
    ';'      reduce using rule 13 (boleanorinteger)


State 308

   14 boleanorinteger: INTEGER •

    ARRAY    reduce using rule 14 (boleanorinteger)
    CHILLAX  reduce using rule 14 (boleanorinteger)
    LET      reduce using rule 14 (boleanorinteger)
    BACK     reduce using rule 14 (boleanorinteger)
    DO       reduce using rule 14 (boleanorinteger)
    IF       reduce using rule 14 (boleanorinteger)
    INPUT    reduce using rule 14 (boleanorinteger)
    OUTPUT   reduce using rule 14 (boleanorinteger)
    WHILE    reduce using rule 14 (boleanorinteger)
    ';'      reduce using rule 14 (boleanorinteger)


State 309

   15 arrayoptional: • ARRAY
   16              | ε •
   17 type: boleanorinteger • arrayoptional

    ARRAY  shift, and go to state 374

    CHILLAX  reduce using rule 16 (arrayoptional)
    LET      reduce using rule 16 (arrayoptional)
    BACK     reduce using rule 16 (arrayoptional)
    DO       reduce using rule 16 (arrayoptional)
    IF       reduce using rule 16 (arrayoptional)
    INPUT    reduce using rule 16 (arrayoptional)
    OUTPUT   reduce using rule 16 (arrayoptional)
    WHILE    reduce using rule 16 (arrayoptional)
    ';'      reduce using rule 16 (arrayoptional)

    arrayoptional  go to state 375


State 310

   12 varseq: ID commaidstar AS type •

    CHILLAX  reduce using rule 12 (varseq)
    LET      reduce using rule 12 (varseq)
    BACK     reduce using rule 12 (varseq)
    DO       reduce using rule 12 (varseq)
    IF       reduce using rule 12 (varseq)
    INPUT    reduce using rule 12 (varseq)
    OUTPUT   reduce using rule 12 (varseq)
    WHILE    reduce using rule 12 (varseq)
    ';'      reduce using rule 12 (varseq)


State 311

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 376


State 312

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 377


State 313

   81 factor: '(' expr ')' •

    EQ   reduce using rule 81 (factor)
    GEQ  reduce using rule 81 (factor)
    GT   reduce using rule 81 (factor)
    LEQ  reduce using rule 81 (factor)
    LT   reduce using rule 81 (factor)
    NEQ  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ':'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 314

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ':'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 378
    addop          go to state 247


State 315

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ':'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 379
    mulop            go to state 249


State 316

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 380
    '('  shift, and go to state 381

    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ':'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 382


State 317

   83 factor: TRUE •

    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ':'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 318

   84 factor: FALSE •

    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ':'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 319

   80 factor: NUM •

    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ':'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 320

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 316
    TRUE   shift, and go to state 317
    FALSE  shift, and go to state 318
    NUM    shift, and go to state 319
    NOT    shift, and go to state 320
    '('    shift, and go to state 321

    factor  go to state 383


State 321

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 384
    minusoptional  go to state 164
    simple         go to state 165


State 322

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ':'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 385
    addop          go to state 386


State 323

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ':'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 387
    mulop            go to state 388


State 324

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 389


State 325

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 390


State 326

   81 factor: '(' expr ')' •

    END  reduce using rule 81 (factor)
    EQ   reduce using rule 81 (factor)
    GEQ  reduce using rule 81 (factor)
    GT   reduce using rule 81 (factor)
    LEQ  reduce using rule 81 (factor)
    LT   reduce using rule 81 (factor)
    NEQ  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ';'  reduce using rule 81 (factor)
    '&'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 327

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)
    '&'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 391
    addop          go to state 258


State 328

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '&'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 392
    mulop            go to state 260


State 329

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 393
    '('  shift, and go to state 394

    END  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '&'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 395


State 330

   83 factor: TRUE •

    END  reduce using rule 83 (factor)
    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ';'  reduce using rule 83 (factor)
    '&'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 331

   84 factor: FALSE •

    END  reduce using rule 84 (factor)
    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ';'  reduce using rule 84 (factor)
    '&'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 332

   80 factor: NUM •

    END  reduce using rule 80 (factor)
    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ';'  reduce using rule 80 (factor)
    '&'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 333

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 329
    TRUE   shift, and go to state 330
    FALSE  shift, and go to state 331
    NUM    shift, and go to state 332
    NOT    shift, and go to state 333
    '('    shift, and go to state 334

    factor  go to state 396


State 334

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 397
    minusoptional  go to state 164
    simple         go to state 165


State 335

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)
    '&'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 398
    addop          go to state 399


State 336

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '&'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 400
    mulop            go to state 401


State 337

   21 statements: statement semicolonstatementstar END •

    ID    reduce using rule 21 (statements)
    MAIN  reduce using rule 21 (statements)


State 338

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 402


State 339

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 403


State 340

   81 factor: '(' expr ')' •

    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ']'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 341

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ']'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 404
    addop          go to state 271


State 342

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ']'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 405
    mulop            go to state 273


State 343

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 406


State 344

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 407


State 345

   81 factor: '(' expr ')' •

    EQ   reduce using rule 81 (factor)
    GEQ  reduce using rule 81 (factor)
    GT   reduce using rule 81 (factor)
    LEQ  reduce using rule 81 (factor)
    LT   reduce using rule 81 (factor)
    NEQ  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ')'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 346

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 408
    addop          go to state 280


State 347

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 409
    mulop            go to state 282


State 348

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 410
    '('  shift, and go to state 411

    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 412


State 349

   83 factor: TRUE •

    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ')'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 350

   84 factor: FALSE •

    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ')'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 351

   80 factor: NUM •

    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ')'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 352

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 348
    TRUE   shift, and go to state 349
    FALSE  shift, and go to state 350
    NUM    shift, and go to state 351
    NOT    shift, and go to state 352
    '('    shift, and go to state 353

    factor  go to state 413


State 353

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 414
    minusoptional  go to state 164
    simple         go to state 165


State 354

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 415
    addop          go to state 416


State 355

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 417
    mulop            go to state 418


State 356

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 419


State 357

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 420


State 358

   81 factor: '(' expr ')' •

    END  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ';'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 359

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 421
    addop          go to state 291


State 360

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 422
    mulop            go to state 293


State 361

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 423


State 362

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 424


State 363

   81 factor: '(' expr ')' •

    EQ   reduce using rule 81 (factor)
    GEQ  reduce using rule 81 (factor)
    GT   reduce using rule 81 (factor)
    LEQ  reduce using rule 81 (factor)
    LT   reduce using rule 81 (factor)
    NEQ  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ','  reduce using rule 81 (factor)
    ')'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 364

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    EQ   reduce using rule 64 (addoptermstar)
    GEQ  reduce using rule 64 (addoptermstar)
    GT   reduce using rule 64 (addoptermstar)
    LEQ  reduce using rule 64 (addoptermstar)
    LT   reduce using rule 64 (addoptermstar)
    NEQ  reduce using rule 64 (addoptermstar)
    ','  reduce using rule 64 (addoptermstar)
    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 425
    addop          go to state 300


State 365

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    EQ   reduce using rule 70 (mulopfactorstar)
    GEQ  reduce using rule 70 (mulopfactorstar)
    GT   reduce using rule 70 (mulopfactorstar)
    LEQ  reduce using rule 70 (mulopfactorstar)
    LT   reduce using rule 70 (mulopfactorstar)
    NEQ  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ','  reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 426
    mulop            go to state 302


State 366

   76 bracksimpbrackexprcommaexprstaroptional: • '[' simple ']'
   77                                        | • '(' expr commaexprstar ')'
   78                                        | ε •
   79 factor: ID • bracksimpbrackexprcommaexprstaroptional

    '['  shift, and go to state 427
    '('  shift, and go to state 428

    OR   reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ','  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 78 (bracksimpbrackexprcommaexprstaroptional)

    bracksimpbrackexprcommaexprstaroptional  go to state 429


State 367

   83 factor: TRUE •

    OR   reduce using rule 83 (factor)
    AND  reduce using rule 83 (factor)
    MOD  reduce using rule 83 (factor)
    ','  reduce using rule 83 (factor)
    ')'  reduce using rule 83 (factor)
    '-'  reduce using rule 83 (factor)
    '+'  reduce using rule 83 (factor)
    '/'  reduce using rule 83 (factor)
    '*'  reduce using rule 83 (factor)


State 368

   84 factor: FALSE •

    OR   reduce using rule 84 (factor)
    AND  reduce using rule 84 (factor)
    MOD  reduce using rule 84 (factor)
    ','  reduce using rule 84 (factor)
    ')'  reduce using rule 84 (factor)
    '-'  reduce using rule 84 (factor)
    '+'  reduce using rule 84 (factor)
    '/'  reduce using rule 84 (factor)
    '*'  reduce using rule 84 (factor)


State 369

   80 factor: NUM •

    OR   reduce using rule 80 (factor)
    AND  reduce using rule 80 (factor)
    MOD  reduce using rule 80 (factor)
    ','  reduce using rule 80 (factor)
    ')'  reduce using rule 80 (factor)
    '-'  reduce using rule 80 (factor)
    '+'  reduce using rule 80 (factor)
    '/'  reduce using rule 80 (factor)
    '*'  reduce using rule 80 (factor)


State 370

   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   82       | NOT • factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 366
    TRUE   shift, and go to state 367
    FALSE  shift, and go to state 368
    NUM    shift, and go to state 369
    NOT    shift, and go to state 370
    '('    shift, and go to state 371

    factor  go to state 430


State 371

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   81 factor: '(' • expr ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 431
    minusoptional  go to state 164
    simple         go to state 165


State 372

   63 addoptermstar: • addop term addoptermstar
   64              | ε •
   65 simple: minusoptional term • addoptermstar
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ','  reduce using rule 64 (addoptermstar)
    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 432
    addop          go to state 433


State 373

   69 mulopfactorstar: • mulop factor mulopfactorstar
   70                | ε •
   71 term: factor • mulopfactorstar
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ','  reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 434
    mulop            go to state 435


State 374

   15 arrayoptional: ARRAY •

    CHILLAX  reduce using rule 15 (arrayoptional)
    LET      reduce using rule 15 (arrayoptional)
    BACK     reduce using rule 15 (arrayoptional)
    DO       reduce using rule 15 (arrayoptional)
    IF       reduce using rule 15 (arrayoptional)
    INPUT    reduce using rule 15 (arrayoptional)
    OUTPUT   reduce using rule 15 (arrayoptional)
    WHILE    reduce using rule 15 (arrayoptional)
    ';'      reduce using rule 15 (arrayoptional)


State 375

   17 type: boleanorinteger arrayoptional •

    CHILLAX  reduce using rule 17 (type)
    LET      reduce using rule 17 (type)
    BACK     reduce using rule 17 (type)
    DO       reduce using rule 17 (type)
    IF       reduce using rule 17 (type)
    INPUT    reduce using rule 17 (type)
    OUTPUT   reduce using rule 17 (type)
    WHILE    reduce using rule 17 (type)
    ';'      reduce using rule 17 (type)


State 376

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    EQ   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ':'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 377

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 436


State 378

   63 addoptermstar: addop term addoptermstar •

    EQ   reduce using rule 63 (addoptermstar)
    GEQ  reduce using rule 63 (addoptermstar)
    GT   reduce using rule 63 (addoptermstar)
    LEQ  reduce using rule 63 (addoptermstar)
    LT   reduce using rule 63 (addoptermstar)
    NEQ  reduce using rule 63 (addoptermstar)
    ':'  reduce using rule 63 (addoptermstar)


State 379

   69 mulopfactorstar: mulop factor mulopfactorstar •

    EQ   reduce using rule 69 (mulopfactorstar)
    GEQ  reduce using rule 69 (mulopfactorstar)
    GT   reduce using rule 69 (mulopfactorstar)
    LEQ  reduce using rule 69 (mulopfactorstar)
    LT   reduce using rule 69 (mulopfactorstar)
    NEQ  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ':'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 380

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 437


State 381

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 438
    minusoptional  go to state 167
    simple         go to state 168


State 382

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ':'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 383

   82 factor: NOT factor •

    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ':'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 384

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 439


State 385

   65 simple: minusoptional term addoptermstar •

    ':'  reduce using rule 65 (simple)


State 386

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 316
    TRUE   shift, and go to state 317
    FALSE  shift, and go to state 318
    NUM    shift, and go to state 319
    NOT    shift, and go to state 320
    '('    shift, and go to state 321

    term    go to state 440
    factor  go to state 323


State 387

   71 term: factor mulopfactorstar •

    OR   reduce using rule 71 (term)
    ':'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 388

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 316
    TRUE   shift, and go to state 317
    FALSE  shift, and go to state 318
    NUM    shift, and go to state 319
    NOT    shift, and go to state 320
    '('    shift, and go to state 321

    factor  go to state 441


State 389

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    END  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    EQ   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '&'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 390

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 442


State 391

   63 addoptermstar: addop term addoptermstar •

    END  reduce using rule 63 (addoptermstar)
    EQ   reduce using rule 63 (addoptermstar)
    GEQ  reduce using rule 63 (addoptermstar)
    GT   reduce using rule 63 (addoptermstar)
    LEQ  reduce using rule 63 (addoptermstar)
    LT   reduce using rule 63 (addoptermstar)
    NEQ  reduce using rule 63 (addoptermstar)
    ';'  reduce using rule 63 (addoptermstar)
    '&'  reduce using rule 63 (addoptermstar)


State 392

   69 mulopfactorstar: mulop factor mulopfactorstar •

    END  reduce using rule 69 (mulopfactorstar)
    EQ   reduce using rule 69 (mulopfactorstar)
    GEQ  reduce using rule 69 (mulopfactorstar)
    GT   reduce using rule 69 (mulopfactorstar)
    LEQ  reduce using rule 69 (mulopfactorstar)
    LT   reduce using rule 69 (mulopfactorstar)
    NEQ  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ';'  reduce using rule 69 (mulopfactorstar)
    '&'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 393

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 443


State 394

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 444
    minusoptional  go to state 167
    simple         go to state 168


State 395

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    END  reduce using rule 79 (factor)
    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ';'  reduce using rule 79 (factor)
    '&'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 396

   82 factor: NOT factor •

    END  reduce using rule 82 (factor)
    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ';'  reduce using rule 82 (factor)
    '&'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 397

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 445


State 398

   65 simple: minusoptional term addoptermstar •

    END  reduce using rule 65 (simple)
    ';'  reduce using rule 65 (simple)
    '&'  reduce using rule 65 (simple)


State 399

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 329
    TRUE   shift, and go to state 330
    FALSE  shift, and go to state 331
    NUM    shift, and go to state 332
    NOT    shift, and go to state 333
    '('    shift, and go to state 334

    term    go to state 446
    factor  go to state 336


State 400

   71 term: factor mulopfactorstar •

    END  reduce using rule 71 (term)
    OR   reduce using rule 71 (term)
    ';'  reduce using rule 71 (term)
    '&'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 401

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 329
    TRUE   shift, and go to state 330
    FALSE  shift, and go to state 331
    NUM    shift, and go to state 332
    NOT    shift, and go to state 333
    '('    shift, and go to state 334

    factor  go to state 447


State 402

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ']'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 403

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 448


State 404

   63 addoptermstar: addop term addoptermstar •

    ']'  reduce using rule 63 (addoptermstar)


State 405

   69 mulopfactorstar: mulop factor mulopfactorstar •

    OR   reduce using rule 69 (mulopfactorstar)
    ']'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 406

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    EQ   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 407

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 449


State 408

   63 addoptermstar: addop term addoptermstar •

    EQ   reduce using rule 63 (addoptermstar)
    GEQ  reduce using rule 63 (addoptermstar)
    GT   reduce using rule 63 (addoptermstar)
    LEQ  reduce using rule 63 (addoptermstar)
    LT   reduce using rule 63 (addoptermstar)
    NEQ  reduce using rule 63 (addoptermstar)
    ')'  reduce using rule 63 (addoptermstar)


State 409

   69 mulopfactorstar: mulop factor mulopfactorstar •

    EQ   reduce using rule 69 (mulopfactorstar)
    GEQ  reduce using rule 69 (mulopfactorstar)
    GT   reduce using rule 69 (mulopfactorstar)
    LEQ  reduce using rule 69 (mulopfactorstar)
    LT   reduce using rule 69 (mulopfactorstar)
    NEQ  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ')'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 410

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 450


State 411

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 451
    minusoptional  go to state 167
    simple         go to state 168


State 412

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ')'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 413

   82 factor: NOT factor •

    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ')'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 414

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 452


State 415

   65 simple: minusoptional term addoptermstar •

    ')'  reduce using rule 65 (simple)


State 416

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 348
    TRUE   shift, and go to state 349
    FALSE  shift, and go to state 350
    NUM    shift, and go to state 351
    NOT    shift, and go to state 352
    '('    shift, and go to state 353

    term    go to state 453
    factor  go to state 355


State 417

   71 term: factor mulopfactorstar •

    OR   reduce using rule 71 (term)
    ')'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 418

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 348
    TRUE   shift, and go to state 349
    FALSE  shift, and go to state 350
    NUM    shift, and go to state 351
    NOT    shift, and go to state 352
    '('    shift, and go to state 353

    factor  go to state 454


State 419

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    END  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 420

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 455


State 421

   63 addoptermstar: addop term addoptermstar •

    END  reduce using rule 63 (addoptermstar)
    ';'  reduce using rule 63 (addoptermstar)


State 422

   69 mulopfactorstar: mulop factor mulopfactorstar •

    END  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ';'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 423

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    EQ   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ','  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 424

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 456


State 425

   63 addoptermstar: addop term addoptermstar •

    EQ   reduce using rule 63 (addoptermstar)
    GEQ  reduce using rule 63 (addoptermstar)
    GT   reduce using rule 63 (addoptermstar)
    LEQ  reduce using rule 63 (addoptermstar)
    LT   reduce using rule 63 (addoptermstar)
    NEQ  reduce using rule 63 (addoptermstar)
    ','  reduce using rule 63 (addoptermstar)
    ')'  reduce using rule 63 (addoptermstar)


State 426

   69 mulopfactorstar: mulop factor mulopfactorstar •

    EQ   reduce using rule 69 (mulopfactorstar)
    GEQ  reduce using rule 69 (mulopfactorstar)
    GT   reduce using rule 69 (mulopfactorstar)
    LEQ  reduce using rule 69 (mulopfactorstar)
    LT   reduce using rule 69 (mulopfactorstar)
    NEQ  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ','  reduce using rule 69 (mulopfactorstar)
    ')'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 427

   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   76 bracksimpbrackexprcommaexprstaroptional: '[' • simple ']'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    minusoptional  go to state 163
    simple         go to state 457


State 428

   54 expr: • simple reloporsimpleoptional
   61 minusoptional: • '-'
   62              | ε •
   65 simple: • minusoptional term addoptermstar
   77 bracksimpbrackexprcommaexprstaroptional: '(' • expr commaexprstar ')'

    '-'  shift, and go to state 47

    ID     reduce using rule 62 (minusoptional)
    TRUE   reduce using rule 62 (minusoptional)
    FALSE  reduce using rule 62 (minusoptional)
    NUM    reduce using rule 62 (minusoptional)
    NOT    reduce using rule 62 (minusoptional)
    '('    reduce using rule 62 (minusoptional)

    expr           go to state 458
    minusoptional  go to state 167
    simple         go to state 168


State 429

   79 factor: ID bracksimpbrackexprcommaexprstaroptional •

    OR   reduce using rule 79 (factor)
    AND  reduce using rule 79 (factor)
    MOD  reduce using rule 79 (factor)
    ','  reduce using rule 79 (factor)
    ')'  reduce using rule 79 (factor)
    '-'  reduce using rule 79 (factor)
    '+'  reduce using rule 79 (factor)
    '/'  reduce using rule 79 (factor)
    '*'  reduce using rule 79 (factor)


State 430

   82 factor: NOT factor •

    OR   reduce using rule 82 (factor)
    AND  reduce using rule 82 (factor)
    MOD  reduce using rule 82 (factor)
    ','  reduce using rule 82 (factor)
    ')'  reduce using rule 82 (factor)
    '-'  reduce using rule 82 (factor)
    '+'  reduce using rule 82 (factor)
    '/'  reduce using rule 82 (factor)
    '*'  reduce using rule 82 (factor)


State 431

   81 factor: '(' expr • ')'

    ')'  shift, and go to state 459


State 432

   65 simple: minusoptional term addoptermstar •

    ','  reduce using rule 65 (simple)
    ')'  reduce using rule 65 (simple)


State 433

   63 addoptermstar: addop • term addoptermstar
   71 term: • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 366
    TRUE   shift, and go to state 367
    FALSE  shift, and go to state 368
    NUM    shift, and go to state 369
    NOT    shift, and go to state 370
    '('    shift, and go to state 371

    term    go to state 460
    factor  go to state 373


State 434

   71 term: factor mulopfactorstar •

    OR   reduce using rule 71 (term)
    ','  reduce using rule 71 (term)
    ')'  reduce using rule 71 (term)
    '-'  reduce using rule 71 (term)
    '+'  reduce using rule 71 (term)


State 435

   69 mulopfactorstar: mulop • factor mulopfactorstar
   79 factor: • ID bracksimpbrackexprcommaexprstaroptional
   80       | • NUM
   81       | • '(' expr ')'
   82       | • NOT factor
   83       | • TRUE
   84       | • FALSE

    ID     shift, and go to state 366
    TRUE   shift, and go to state 367
    FALSE  shift, and go to state 368
    NUM    shift, and go to state 369
    NOT    shift, and go to state 370
    '('    shift, and go to state 371

    factor  go to state 461


State 436

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    EQ   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ':'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 437

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 462


State 438

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 463


State 439

   81 factor: '(' expr ')' •

    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ':'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 440

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ':'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 464
    addop          go to state 386


State 441

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ':'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 465
    mulop            go to state 388


State 442

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    END  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    EQ   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '&'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 443

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 466


State 444

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 467


State 445

   81 factor: '(' expr ')' •

    END  reduce using rule 81 (factor)
    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ';'  reduce using rule 81 (factor)
    '&'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 446

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    END  reduce using rule 64 (addoptermstar)
    ';'  reduce using rule 64 (addoptermstar)
    '&'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 468
    addop          go to state 399


State 447

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    END  reduce using rule 70 (mulopfactorstar)
    OR   reduce using rule 70 (mulopfactorstar)
    ';'  reduce using rule 70 (mulopfactorstar)
    '&'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 469
    mulop            go to state 401


State 448

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ']'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 449

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    EQ   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 450

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 470


State 451

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 471


State 452

   81 factor: '(' expr ')' •

    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ')'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 453

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 472
    addop          go to state 416


State 454

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 473
    mulop            go to state 418


State 455

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    END  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 456

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    EQ   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    GT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    LT   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    NEQ  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ','  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 457

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple • ']'

    ']'  shift, and go to state 474


State 458

   37 commaexprstar: • ',' expr commaexprstar
   38              | ε •
   77 bracksimpbrackexprcommaexprstaroptional: '(' expr • commaexprstar ')'

    ','  shift, and go to state 130

    ')'  reduce using rule 38 (commaexprstar)

    commaexprstar  go to state 475


State 459

   81 factor: '(' expr ')' •

    OR   reduce using rule 81 (factor)
    AND  reduce using rule 81 (factor)
    MOD  reduce using rule 81 (factor)
    ','  reduce using rule 81 (factor)
    ')'  reduce using rule 81 (factor)
    '-'  reduce using rule 81 (factor)
    '+'  reduce using rule 81 (factor)
    '/'  reduce using rule 81 (factor)
    '*'  reduce using rule 81 (factor)


State 460

   63 addoptermstar: • addop term addoptermstar
   63              | addop term • addoptermstar
   64              | ε •
   66 addop: • '-'
   67      | • OR
   68      | • '+'

    OR   shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106

    ','  reduce using rule 64 (addoptermstar)
    ')'  reduce using rule 64 (addoptermstar)

    addoptermstar  go to state 476
    addop          go to state 433


State 461

   69 mulopfactorstar: • mulop factor mulopfactorstar
   69                | mulop factor • mulopfactorstar
   70                | ε •
   72 mulop: • AND
   73      | • '/'
   74      | • '*'
   75      | • MOD

    AND  shift, and go to state 109
    MOD  shift, and go to state 110
    '/'  shift, and go to state 111
    '*'  shift, and go to state 112

    OR   reduce using rule 70 (mulopfactorstar)
    ','  reduce using rule 70 (mulopfactorstar)
    ')'  reduce using rule 70 (mulopfactorstar)
    '-'  reduce using rule 70 (mulopfactorstar)
    '+'  reduce using rule 70 (mulopfactorstar)

    mulopfactorstar  go to state 477
    mulop            go to state 435


State 462

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ':'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 463

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 478


State 464

   63 addoptermstar: addop term addoptermstar •

    ':'  reduce using rule 63 (addoptermstar)


State 465

   69 mulopfactorstar: mulop factor mulopfactorstar •

    OR   reduce using rule 69 (mulopfactorstar)
    ':'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 466

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    END  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '&'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 467

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 479


State 468

   63 addoptermstar: addop term addoptermstar •

    END  reduce using rule 63 (addoptermstar)
    ';'  reduce using rule 63 (addoptermstar)
    '&'  reduce using rule 63 (addoptermstar)


State 469

   69 mulopfactorstar: mulop factor mulopfactorstar •

    END  reduce using rule 69 (mulopfactorstar)
    OR   reduce using rule 69 (mulopfactorstar)
    ';'  reduce using rule 69 (mulopfactorstar)
    '&'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 470

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 471

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 480


State 472

   63 addoptermstar: addop term addoptermstar •

    ')'  reduce using rule 63 (addoptermstar)


State 473

   69 mulopfactorstar: mulop factor mulopfactorstar •

    OR   reduce using rule 69 (mulopfactorstar)
    ')'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 474

   76 bracksimpbrackexprcommaexprstaroptional: '[' simple ']' •

    OR   reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ','  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 76 (bracksimpbrackexprcommaexprstaroptional)


State 475

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar • ')'

    ')'  shift, and go to state 481


State 476

   63 addoptermstar: addop term addoptermstar •

    ','  reduce using rule 63 (addoptermstar)
    ')'  reduce using rule 63 (addoptermstar)


State 477

   69 mulopfactorstar: mulop factor mulopfactorstar •

    OR   reduce using rule 69 (mulopfactorstar)
    ','  reduce using rule 69 (mulopfactorstar)
    ')'  reduce using rule 69 (mulopfactorstar)
    '-'  reduce using rule 69 (mulopfactorstar)
    '+'  reduce using rule 69 (mulopfactorstar)


State 478

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ':'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 479

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    END  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ';'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '&'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 480

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)


State 481

   77 bracksimpbrackexprcommaexprstaroptional: '(' expr commaexprstar ')' •

    OR   reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    AND  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    MOD  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ','  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    ')'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '-'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '+'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '/'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
    '*'  reduce using rule 77 (bracksimpbrackexprcommaexprstaroptional)
